{"version":3,"file":"static/js/153.831a4aff.chunk.js","mappings":"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","sources":["components/Services/api.js","components/pages/MovieDetails/MovieDetails.styled.jsx","components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '8d9abe3c80967729f620b46c4ecff176';\n\n//trending movies request\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data.results;\n};\n\n// movie details request\n\nexport const getMovieById = async movieId => {\n  const res = await axios\n    .get(`/movie/${movieId}?api_key=${KEY}`)\n    .catch(error => {\n      throw new Error('Oops... seems like an error occured.');\n    });\n  return res.data;\n};\n\n//cast info request\n\nexport const getCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\n\n//reviews request\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return data.results;\n};\n\n// search movies request\n\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.section`\n  padding-top: 15px;\n  box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.14);\n`;\nexport const MovieCard = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n  padding: 10px 0 10px 10px;\n`;\n\nexport const InfoLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n\n  :hover {\n    color: #ab47bc;\n  }\n`;\n\nexport const InfoItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 270px;\n`;\n\nexport const ExtraInfoSection = styled.div`\n  margin-top: 10px;\n  padding: 10px;\n  box-shadow: 0px 1px 1px 0px rgba(0, 0, 0, 0.14);\n`;\n\nexport const ListItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ExtraInfoTitle = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const MovieInfo = styled.div`\n  width: 500px;\n  text-align: justify;\n`;\n\nexport const BackButton = styled.button`\n  border-radius: 6px;\n  padding: 7px 10px;\n  border: transparent;\n  outline: none;\n  margin-left: 10px;\n  font-weight: 600;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  background-color: #ab47bc;\n  color: white;\n  text-decoration: none;\n  &:hover {\n    background-color: #773183;\n  }\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { TiChevronLeft } from 'react-icons/ti';\nimport { getMovieById } from 'components/Services/api';\nimport blankImage from '../../images/blank_profile.png';\nimport {\n  MovieCard,\n  InfoItem,\n  InfoLink,\n  Title,\n  Wrapper,\n  ImageWrapper,\n  ExtraInfoSection,\n  ListItem,\n  ExtraInfoTitle,\n  MovieInfo,\n  BackButton,\n} from './MovieDetails.styled';\n\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500/';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const movieData = await getMovieById(movieId);\n        setMovie(movieData);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const handleGoBackButton = () => {\n    navigate(location.state.from);\n  };\n  if (!movie) {\n    return;\n  }\n  const { genres, title, release_date, overview, vote_average, poster_path } =\n    movie;\n  const imageSRC = poster_path ? IMAGEURL + poster_path : blankImage;\n  const userScore = Math.round((Number(vote_average) * 100) / 10);\n  const movieGenres = genres.map(genre => genre.name).join(' ');\n  const releaseDate = release_date.slice(0, 4);\n\n  return (\n    <>\n      <Wrapper>\n        {location.state?.from && (\n          <BackButton onClick={handleGoBackButton}>\n            <TiChevronLeft />\n            <span>Go back</span>\n          </BackButton>\n        )}\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <MovieCard>\n            <ImageWrapper>\n              <img src={`${imageSRC}`} alt={title} />\n            </ImageWrapper>\n            <MovieInfo>\n              <Title>\n                {title} {releaseDate && `(${releaseDate})`}\n              </Title>\n              <ul>\n                <InfoItem>\n                  {userScore > 0 && <p>User Score: {userScore}%</p>}\n                </InfoItem>\n                <InfoItem>\n                  <b>Overview</b>\n\n                  <p>{overview}</p>\n                </InfoItem>\n                <InfoItem>\n                  <b>Genres</b>\n\n                  <p>{movieGenres || ' - '}</p>\n                </InfoItem>\n              </ul>\n            </MovieInfo>\n          </MovieCard>\n        )}\n      </Wrapper>\n      <ExtraInfoSection>\n        <ExtraInfoTitle> Additional information</ExtraInfoTitle>\n        <div>\n          <ul>\n            <ListItem>\n              <InfoLink to=\"cast\" state={location.state}>\n                Cast\n              </InfoLink>\n            </ListItem>\n\n            <ListItem>\n              <InfoLink to=\"reviews\" state={location.state}>\n                Reviews\n              </InfoLink>\n            </ListItem>\n          </ul>\n        </div>\n      </ExtraInfoSection>\n\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","KEY","getTrendingMovies","data","results","getMovieById","movieId","catch","error","Error","res","getCredits","cast","getReviews","getMoviesByName","query","Wrapper","styled","MovieCard","InfoLink","Link","InfoItem","Title","ImageWrapper","ExtraInfoSection","ListItem","ExtraInfoTitle","MovieInfo","BackButton","useParams","useState","movie","setMovie","isLoading","setIsLoading","location","useLocation","navigate","useNavigate","useEffect","fetchData","movieData","console","log","genres","title","release_date","overview","vote_average","poster_path","imageSRC","blankImage","userScore","Math","round","Number","movieGenres","map","genre","name","join","releaseDate","slice","state","from","onClick","src","alt","to","Suspense"],"sourceRoot":""}